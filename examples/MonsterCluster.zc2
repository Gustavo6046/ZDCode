#DEFINE HasJumpZombies

#IFDEF HasJumpZombies
#INCLUDE JumpZombie.zc2
#ENDIF

class MonSpawnY extends RandomSpawner {
    #IFDEF HasJumpZombies
    set DropItem to "ZombieMan", 255, 1;
    #ELSE
    set DropItem to "ZombieMan", 255, 2;
    #ENDIF
    set DropItem to "DoomImp", 255, 1;
    set DropItem to "ShotgunGuy", 255, 1;
    set DropItem to "Demon", 255, 1;
    #IFDEF HasJumpZombies
    set DropItem to "RunZombie", 255, 1;
    #ENDIF
}

class MultiSpawner {
    set Gravity to 0;
    
    is NOBLOCKMAP;
    is NOSECTOR;
    is NOGRAVITY;
    is THRUACTORS;
}

class XZombieSpawner extends MultiSpawner {
    function MakeSpawn {
        x 7 TNT1 A 9 A_SpawnItemEx('Zombieman', FRandom(-100, 100), FRandom(-100, 100), 10, 0, 0, 0, FRandom(0, 360));
    };

    label Spawn {
        TNT1 A 1;
        call MakeSpawn;
        Stop;
    };
}

class XShotGuySpawner extends MultiSpawner {
    set Gravity to 0;

    function MakeSpawn {
        x 3 TNT1 A 9 A_SpawnItemEx('ShotgunGuy', FRandom(-100, 100), FRandom(-100, 100), 10, 0, 0, 0, FRandom(0, 360));
    };

    label Spawn {
        TNT1 A 1;
        call MakeSpawn;
        Stop;
    };
}

class MonSpawnO extends RandomSpawner {
    set DropItem to "Spectre";
    set DropItem to "Fatso";
    set DropItem to "ChaingunGuy";
    set DropItem to "Arachnotron";
    set DropItem to "Revenant";
    set DropItem to "Cacodemon";
}

class MonSpawnR extends RandomSpawner {
    set DropItem to "PainElemental";
    set DropItem to "ArchVile";
    set DropItem to "HellKnight";
    set DropItem to "BaronOfHell";
}

class SkullParticle {
    set Gravity to 0.04;
    set Scale to 0.8;
    set Alpha to 0.5;
    set RenderStyle to Add;

    is THRUACTORS;
}

class SkullSpawner {
    set Scale to 0.3;
    set Alpha to 0.7;
    set RenderStyle to Translucent;
    set Speed to 9;
    set Damage to 0;
    set Radius to 2;
    set Height to 2;
    
    combo Projectile;

    is THRUACTORS;
}

class SkullParticleR extends SkullParticle {
    set Scale to 1.0;

    label Spawn {
        SKPT R 12 [Bright];
        Stop;
    };
}

class SkullParticleO extends SkullParticle {
    label Spawn {
        SKPT O 12 [Bright];
        Stop;
    };
}

class SkullParticleY extends SkullParticle {
    set Scale to 0.5;

    label Spawn {
        SKPT Y 12 [Bright];
        Stop;
    };
}

class SkullSpawnerR extends SkullSpawner {
    set Radius to 60;

    label Spawn {
        SKUL R 2 [Bright];
        x 3 call MakeParticle;
        Loop;
    };

    function MakeParticle {
        x 2 sometimes 20 TNT1 A 0 A_SpawnItemEx('SkullParticleR', 0, 0, 0, FRandom(-2, 2), FRandom(-2, 2), FRandom(-2, 2));
    };

    function Duplicate {
        if (z - floorz < 40)
            TNT1 A 0 A_CustomMissile('SkullSpawnerR', 0, 0, 180 + FRandom(-50, -50), CMF_AIMDIRECTION | CMF_SAVEPITCH, FRandom(-20, 5));

        else
            TNT1 A 0 A_CustomMissile('SkullSpawnerR', 0, 0, 180 + FRandom(-50, 50), CMF_AIMDIRECTION | CMF_SAVEPITCH, FRandom(-20, 20));
    };

    label Death {
        sometimes 96 {
            TNT1 A 0 A_Log("RED ALERT: New high-level threat detected!");
            TNT1 A 0 A_SpawnItemEx('MonSpawnR', 0, 0, floorz - z);
        };

        x 5 sometimes 8
            call Duplicate;

        x 20 call MakeParticle;
        TNT1 A 1;
        Stop;
    };
}

class SkullSpawnerO extends SkullSpawner {
    set Radius to 45;

    label Spawn {
        SKUL O 4 [Bright];
        x 3 call MakeParticle;
        Loop;
    };

    function MakeParticle {
        sometimes 20 TNT1 A 0 A_SpawnItemEx('SkullParticleO', 0, 0, 0, FRandom(-2, 2), FRandom(-2, 2), FRandom(-2, 2));
    };

    function Duplicate {
        if (z - floorz < 40)
            TNT1 A 0 A_CustomMissile('SkullSpawnerO', 0, 0, 180 + FRandom(-50, -50), CMF_AIMDIRECTION | CMF_SAVEPITCH, FRandom(-20, 5));

        else            
            TNT1 A 0 A_CustomMissile('SkullSpawnerO', 0, 0, 180 + FRandom(-50, 50), CMF_AIMDIRECTION | CMF_SAVEPITCH, FRandom(-20, 20));
    };

    label Death {
        x 2 sometimes 83 {
            TNT1 A 0 A_Log("ORANGE ALERT: New medium-level threat detected!");
            TNT1 A 0 A_SpawnItemEx('MonSpawnO', 0, 0, floorz - z);
        };

        x 6 sometimes 10
            call Duplicate;

        x 20 call MakeParticle;
        TNT1 A 1;
        Stop;
    };
}

class SkullSpawnerY extends SkullSpawner {
    set Radius to 25;

    label Spawn {
        SKUL Y 4 [Bright];
        x 3 call MakeParticle;
        Loop;
    };

    function MakeParticle {
        sometimes 20 TNT1 A 0 A_SpawnItemEx('SkullParticleY', 0, 0, 0, FRandom(-2, 2), FRandom(-2, 2), FRandom(-2, 2));
    };

    function Duplicate {
        if (z - floorz < 40)
            TNT1 A 0 A_CustomMissile('SkullSpawnerY', 0, 0, 180 + FRandom(-50, -50), CMF_AIMDIRECTION | CMF_SAVEPITCH, FRandom(-20, 5));

        else
            TNT1 A 0 A_CustomMissile('SkullSpawnerY', 0, 0, 180 + FRandom(-50, 50), CMF_AIMDIRECTION | CMF_SAVEPITCH, FRandom(-20, 20));
    };

    label Death {
        x 3 sometimes 70 {
            TNT1 A 0 A_Log("YELLOW ALERT: New low-level threat detected!");
            TNT1 A 0 A_SpawnItemEx('MonSpawnY', FRandom(-70, 70), FRandom(-70, 70), floorz - z);
        };

        x 7 sometimes 12
            call Duplicate;

        x 20 call MakeParticle;
        TNT1 A 1;
        Stop;
    };
}
