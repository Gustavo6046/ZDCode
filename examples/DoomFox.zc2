class MSPart {
    isn't   SOLID;

    set Gravity to 0;
}

class<> MSP_Limb extends MSPart {
    label Spawn {
        TNT1 A 0;
        inject Display;
        Stop;
    };

    abstract macro Display;
}

derive MSP_Limb::() {
    macro Display { FX_H A 1; };
} as MSP_Head1;

derive MSP_Limb::() {
    macro Display { FX_H B 1; };
} as MSP_Head2;

class<which> Tail extends MSPart {
    label Spawn {
        TNT1 A 0;
        TNT1 A 0 A_Jump(255, which * 2);
        TNT1 A 0 A_Jump(255, "Done");
        FX_T A 1;
        Stop;
        TNT1 A 0;
        FX_T B 1;
        Stop;
        TNT1 A 0;
        FX_T C 1;
        Stop;
        TNT1 A 0;
        FX_T D 1;
        Stop;
        TNT1 A 0;
        FX_T E 1;
        Stop;
        TNT1 A 0;
        Stop;
    };
}

class MSA_Fox {
    combo   Monster;
    is      FRIENDLY;

    macro SpawnLimb(height, forward, right, cls) {
        TNT1 A 0 A_SpawnItemEx(cls, cos(angle) * forward + sin(angle) * right, sin(angle) * forward + cos(angle) * right, height);
    };

    macro DrawLegAt_A(forward, right) {
        inject SpawnLimb(5, forward, right, MSP_Limb::() { macro Display{ FX_L A 1; }; });
    };

    macro DrawLegAt_B(forward, right) {
        inject SpawnLimb(5, forward, right, MSP_Limb::() { macro Display{ FX_L B 1; }; });
    };

    macro DrawLegAt_C(forward, right) {
        inject SpawnLimb(5, forward, right, MSP_Limb::() { macro Display{ FX_L C 1; }; });
    };

    macro DrawLegAt_D(forward, right) {
        inject SpawnLimb(5, forward, right, MSP_Limb::() { macro Display{ FX_L D 1; }; });
    };

    macro DrawTail(which) {
        inject SpawnLimb(9, -55, 0, Tail::(which));
    };

    // Combine individual parts
    macro DrawLegsNormal {
        inject DrawLegAt_A( 40, -10);
        inject DrawLegAt_A( 40,  10);
        inject DrawLegAt_A(-40, -10);
        inject DrawLegAt_A(-40,  10);
    };

    // Animations
    macro DrawTail1 {
        inject DrawTail(1);
    };

    macro DrawTail2 {
        inject DrawTail(2);
    };

    macro DrawTail3 {
        inject DrawTail(3);
    };

    macro DrawTail4 {
        inject DrawTail(4);
    };

    macro DrawTail5 {
        inject DrawTail(5);
    };

    macro DrawHeadNormal {
       inject SpawnLimb(8, 24, 0, "MSP_Head1");
    };

    // Animation states
    macro DrawWait1 {
        inject DrawLegsNormal;
        inject DrawTail1;
        inject DrawHeadNormal;
    };

    macro DrawWait2 {
        inject DrawLegsNormal;
        inject DrawTail2;
        inject DrawHeadNormal;
    };

    macro DrawWait3 {
        inject DrawLegsNormal;
        inject DrawTail3;
        inject DrawHeadNormal;
    };

    macro DrawWait4 {
        inject DrawLegsNormal;
        inject DrawTail4;
        inject DrawHeadNormal;
    };

    macro DrawWait5 {
        inject DrawLegsNormal;
        inject DrawTail5;
        inject DrawHeadNormal;
    };

    macro DrawWalk1 {
        inject DrawLegs1;
        inject DrawTail1;
        inject DrawHeadNormal;
    };

    macro DrawWalk2 {
        inject DrawLegs2;
        inject DrawTail1;
        inject DrawHeadNormal;
    };

    macro DrawWalk3 {
        inject DrawLegs2;
        inject DrawTail1;
        inject DrawHeadNormal;
    };

    macro DrawWalk4 {
        inject DrawLegs2;
        inject DrawTail1;
        inject DrawHeadNormal;
    };

    // States
    label Spawn {
        // Tail swinging to a side.
        x4 {
            inject DrawWait1;
            TNT1 A 0 A_Look;
        };
        x3 {
            inject DrawWait2;
            TNT1 A 0 A_Look;
        };
        x3 {
            inject DrawWait3;
            TNT1 A 0 A_Look;
        };
        x3 {
            inject DrawWait2;
            TNT1 A 0 A_Look;
        };

        // Tail swinging to the other side.
        x4 {
            inject DrawWait1;
            TNT1 A 0 A_Look;
        };
        x3 {
            inject DrawWait4;
            TNT1 A 0 A_Look;
        };
        x3 {
            inject DrawWait5;
            TNT1 A 0 A_Look;
        };
        x3 {
            inject DrawWait4;
            TNT1 A 0 A_Look;
        };

        Loop;
    };

    label See {
        Stop;
    };
}
